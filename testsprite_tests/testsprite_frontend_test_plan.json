[
  {
    "id": "TC001",
    "title": "Homepage Product Catalog Loads Correctly",
    "description": "Verify that the homepage displays the product catalog grouped by categories and promotions with correct product details and images.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the homepage"
      },
      {
        "type": "assertion",
        "description": "Check product categories are displayed"
      },
      {
        "type": "assertion",
        "description": "Verify products under each category with correct names, prices, and images"
      },
      {
        "type": "assertion",
        "description": "Confirm promotional banners and carousel images are present and cycling"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Add and Remove Products from Cart with Quantity Management",
    "description": "Test adding products to the cart, modifying quantities, and removing items ensuring price totals update accurately.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "On homepage, add a product to the cart"
      },
      {
        "type": "assertion",
        "description": "Verify product appears in cart with correct quantity and price"
      },
      {
        "type": "action",
        "description": "Increase product quantity in cart"
      },
      {
        "type": "assertion",
        "description": "Check total price updates correctly based on quantity"
      },
      {
        "type": "action",
        "description": "Remove product from cart"
      },
      {
        "type": "assertion",
        "description": "Validate cart is empty or reflects remaining items"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Persist Cart Data Between Sessions",
    "description": "Ensure the shopping cart retains its content between browser sessions and page reloads.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Add multiple products with varied quantities to cart"
      },
      {
        "type": "action",
        "description": "Reload browser or close and reopen the tab"
      },
      {
        "type": "assertion",
        "description": "Confirm cart contents and quantities remain intact"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Checkout Flow with Address Validation and Payment Selection",
    "description": "Verify that the checkout process collects customer data, validates postal codes via ViaCEP API, allows delivery/pickup selection, and payment method choice.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Proceed to checkout page with items in cart"
      },
      {
        "type": "action",
        "description": "Fill out customer information form including postal code"
      },
      {
        "type": "action",
        "description": "Trigger postal code validation and address auto-complete via ViaCEP API"
      },
      {
        "type": "assertion",
        "description": "Verify address fields are auto-populated correctly"
      },
      {
        "type": "action",
        "description": "Select delivery modality (delivery or pickup)"
      },
      {
        "type": "action",
        "description": "Choose payment method from available options"
      },
      {
        "type": "assertion",
        "description": "Validate all entered data and selections before finalizing"
      },
      {
        "type": "action",
        "description": "Submit the order"
      },
      {
        "type": "assertion",
        "description": "Confirm that order is processed and WhatsApp message integration triggers correctly"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Handle Invalid Postal Code During Checkout",
    "description": "Test the system's behavior when an invalid postal code is entered during checkout, ensuring proper error message and no auto-complete.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to checkout page"
      },
      {
        "type": "action",
        "description": "Enter invalid or non-existent postal code in address form"
      },
      {
        "type": "action",
        "description": "Trigger postal code validation"
      },
      {
        "type": "assertion",
        "description": "Verify that a clear error message is displayed to the user"
      },
      {
        "type": "assertion",
        "description": "Confirm that address fields are not auto-populated and manual input is required"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Admin Login Success with Session Persistence",
    "description": "Validate that administrators can log in with correct credentials, that the session persists, and protected routes are accessible.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to admin login page"
      },
      {
        "type": "action",
        "description": "Input valid admin credentials"
      },
      {
        "type": "action",
        "description": "Click login"
      },
      {
        "type": "assertion",
        "description": "Confirm successful login and redirection to admin dashboard"
      },
      {
        "type": "action",
        "description": "Refresh or revisit a protected admin route"
      },
      {
        "type": "assertion",
        "description": "Validate session persistence and access without re-login"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Admin Login Failure with Incorrect Credentials",
    "description": "Ensure the system denies access when invalid login credentials are provided and shows appropriate error messages.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to admin login page"
      },
      {
        "type": "action",
        "description": "Input invalid username or password"
      },
      {
        "type": "action",
        "description": "Click login"
      },
      {
        "type": "assertion",
        "description": "Verify login is rejected and user sees a clear error notification"
      },
      {
        "type": "assertion",
        "description": "Confirm user remains on the login page"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "CRUD Operations for Products in Admin Panel",
    "description": "Verify that administrators can create, read, update, and delete products successfully with data validation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as admin and navigate to product management page"
      },
      {
        "type": "action",
        "description": "Create a new product with valid data"
      },
      {
        "type": "assertion",
        "description": "Confirm the product appears in product list with correct details"
      },
      {
        "type": "action",
        "description": "Edit existing product details"
      },
      {
        "type": "assertion",
        "description": "Verify updated product information persists"
      },
      {
        "type": "action",
        "description": "Delete a product"
      },
      {
        "type": "assertion",
        "description": "Confirm the product is removed from the list"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "CRUD Operations for Categories and Promotions",
    "description": "Ensure administrators can fully manage categories and promotions including creation, editing, and deletion.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access admin panel and open categories management"
      },
      {
        "type": "action",
        "description": "Add a new category with valid name and details"
      },
      {
        "type": "assertion",
        "description": "Validate that the category appears in the list and homepage grouping"
      },
      {
        "type": "action",
        "description": "Edit the newly created category"
      },
      {
        "type": "assertion",
        "description": "Ensure changes are saved and reflected in UI"
      },
      {
        "type": "action",
        "description": "Remove a category"
      },
      {
        "type": "assertion",
        "description": "Confirm category no longer appears on homepage or admin panel"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Store Configuration Management by Admin",
    "description": "Test that administrators can update store information, delivery tariffs, and payment options in the configuration section.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as admin and go to configuration page"
      },
      {
        "type": "action",
        "description": "Modify store details such as business name, contact info, and tariffs"
      },
      {
        "type": "action",
        "description": "Add or remove payment methods"
      },
      {
        "type": "action",
        "description": "Save configuration changes"
      },
      {
        "type": "assertion",
        "description": "Validate that new configuration values are persisted and reflected throughout the system"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Order Finalization Sends Correct WhatsApp Message",
    "description": "Ensure the order details are correctly structured and automatically sent via WhatsApp integration after checkout completion.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Complete checkout with valid order and customer details"
      },
      {
        "type": "assertion",
        "description": "Check that a properly formatted WhatsApp message with order summary is triggered and ready to send"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Responsive UI Across Devices",
    "description": "Verify that all user-facing pages and components render correctly and maintain usability on desktop, tablet, and mobile screen sizes.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access homepage on desktop, tablet, and mobile simulators"
      },
      {
        "type": "assertion",
        "description": "Confirm elements resize, reposition, or collapse appropriately without overlap or cut-offs"
      },
      {
        "type": "action",
        "description": "Navigate through cart and checkout pages on each device type"
      },
      {
        "type": "assertion",
        "description": "Validate touch targets and form inputs are usable and accessible"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Security - Access Control on Admin Routes",
    "description": "Verify that unauthenticated users cannot access admin pages and are redirected to login.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open an admin route URL in a new browser session without logging in"
      },
      {
        "type": "assertion",
        "description": "User is redirected to the admin login page"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "System Logging and Debug Access",
    "description": "Ensure that system logs and debug pages are accessible only by administrators and properly record key events.",
    "category": "security",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an admin and navigate to debug page"
      },
      {
        "type": "assertion",
        "description": "Verify logs are displayed with relevant system data"
      },
      {
        "type": "action",
        "description": "Attempt to access debug page as unauthenticated user"
      },
      {
        "type": "assertion",
        "description": "Access is denied or redirected to login"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Performance - Load Homepage Under 3 Seconds",
    "description": "Test that the homepage content loads completely within 3 seconds under normal network conditions.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load homepage via browser under typical network conditions"
      },
      {
        "type": "assertion",
        "description": "Measure time to fully load and render page and camera carousel"
      },
      {
        "type": "assertion",
        "description": "Verify load time is less than or equal to 3 seconds"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Client CRUD with Address Validation in Admin Panel",
    "description": "Test creating, updating, reading, and deleting client records with proper postal code validation integration in the admin interface.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to clients management page as admin"
      },
      {
        "type": "action",
        "description": "Create new client with valid personal and address information"
      },
      {
        "type": "action",
        "description": "Trigger postal code validation and verify address autofill"
      },
      {
        "type": "assertion",
        "description": "Confirm client record is saved with accurate address"
      },
      {
        "type": "action",
        "description": "Edit client details and update postal code"
      },
      {
        "type": "assertion",
        "description": "Verify updated details are saved and postal code validation triggers"
      },
      {
        "type": "action",
        "description": "Delete a client record"
      },
      {
        "type": "assertion",
        "description": "Ensure client is removed from list"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "UI Components Functionality and Reusability",
    "description": "Validate key reusable UI components render correctly and support interactions as specified (buttons, forms, modals, dialogs).",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Render components like buttons, inputs, modals in isolation in test environment"
      },
      {
        "type": "assertion",
        "description": "Check styling, responsiveness, and proper event handling (clicks, form inputs)"
      },
      {
        "type": "action",
        "description": "Open modals and dialogs, interact with controls"
      },
      {
        "type": "assertion",
        "description": "Verify dialogs open and close correctly and maintain accessibility"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Admin Uploads and Updates Product Images",
    "description": "Test functionality for uploading images to product entries and that images update correctly on the catalog and carousel.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access product management page as admin"
      },
      {
        "type": "action",
        "description": "Upload a valid image file to a product"
      },
      {
        "type": "assertion",
        "description": "Confirm image displays correctly in product detail and homepage carousel if promoted"
      },
      {
        "type": "action",
        "description": "Replace image with a new file"
      },
      {
        "type": "assertion",
        "description": "Validate updated image is reflected in all relevant UI components"
      }
    ]
  }
]
